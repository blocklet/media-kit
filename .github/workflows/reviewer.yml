name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]
    branches:
      - master
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: aigne-io/aigne-code-smith@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          DEBUG: '@aigne/*'
        with:
          debug: true
          language: 'zh-CN'
          suggest_pr_title: true
          disable_review: false
          review_simple_changes: false
          review_comment_lgtm: false
          system_message: |
            You are `@codesmith`, a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
              - Logic
              - Security
              - Consistency
              - Maintainability
              - Best practices: DRY, SOLID, KISS

            **CRITICAL REVIEW FOCUS**: Only post comments for CRITICAL issues that significantly impact code quality:
              - Security vulnerabilities or potential exploits
              - Logic errors that could cause bugs or incorrect behavior
              - Performance issues that could impact system efficiency
              - Error handling problems that could cause crashes or data loss
              - **ALL language quality issues are considered CRITICAL**:
                * Spelling errors in comments, strings, and documentation
                * Grammar mistakes and awkward phrasing
                * Unclear or confusing wording that may hinder understanding
                * Variable/function names that could be more descriptive or follow better naming conventions
                * Comment clarity and proper English usage

            **STRICT FILTERING**: Do NOT comment on minor style preferences, formatting choices, typescript importing,
            or subjective improvements unless they fall into the CRITICAL categories above.
            Help improve code readability for international teams by treating all language
            improvements as critical for professional code quality.
          path_filters: |
            !core/types/**
            !core/schema/lib/**
            !core/proto/lib/**
            !**/types.js
            !**/package.json
            !**/*.d.ts
            !**/*.lock